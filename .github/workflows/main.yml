name: CI/CD for mezbauddin.com

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: mezbauddin.com
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  TFE_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}


jobs:
  build-push-deploy-provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # - name: Configure Terraform Cloud Authentication
      #   run: |
      #     # Set up Terraform Cloud authentication
      #     echo 'credentials "app.terraform.io" {
      #       token = "${{ env.TFE_TOKEN }}"
      #     }' > ~/.terraformrc

      # - name: Deploy Infrastructure with Terraform
      #   run: |
      #     cd infrastructure/terraform
      #     terraform init
      #     terraform apply -replace=null_resource.run_ansible -auto-approve

      # # - name: Run Ansible Deployment
      # #   run: |
      # #     cd infrastructure/ansible/
      # #     ansible-playbook -i inventory.ini install_docker.yml
          
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build Docker Image
      #   run: docker build -t ${{ env.IMAGE_NAME }} .

      # - name: Tag Docker Image
      #   run: docker tag ${{ env.IMAGE_NAME }} ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      # - name: Push Docker Image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Set up SSH and Deploy
        run: |
          echo "$SSH_PRIVATE_KEY" > ssh_key
          chmod 600 ssh_key

          # Log in to Docker Hub on the server using docker/login-action
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

          # Create the ~/.ssh directory if it doesn't exist
          mkdir -p ~/.ssh

          # Add the server's host key to known_hosts
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

          # Continue with the deployment
          ssh -o StrictHostKeyChecking=yes -i ssh_key $SERVER_USERNAME@$SERVER_HOST '
            cd /home/houddinii/mezcloud.com && \
            if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
              COMPOSE_FILE=./docker-compose.prod.yml
            else
              COMPOSE_FILE=./docker-compose.staging.yml
            fi && \
            echo "Using Docker Compose file: $COMPOSE_FILE" && \
            docker-compose -f $COMPOSE_FILE down || true
            docker-compose -f $COMPOSE_FILE pull
            docker-compose -f $COMPOSE_FILE up -d
          '
